{"ast":null,"code":"var _jsxFileName = \"/home/antonio/Desktop/Ft_Transcendence/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3000');\nfunction App() {\n  _s();\n  const [rooms, setRooms] = useState([]);\n  const [currentChatLog, setCurrentChatLog] = useState([]);\n  const [newRoomName, setNewRoomName] = useState('');\n  const [roomID, setRoomID] = useState('');\n  const [messageText, setMessageText] = useState('');\n  useEffect(() => {\n    socket.on('connect', () => {\n      console.log('connection ID : ', socket.id);\n    });\n  }, []);\n  const onClickCreateRoom = useCallback(() => {\n    if (rooms.indexOf(newRoomName) < 0 && newRoomName.replace(/\\s/g, '').length) {\n      console.log('createRoom', newRoomName);\n      socket.emit('createRoom', newRoomName);\n      setRooms([...rooms, newRoomName]);\n    }\n    setNewRoomName('');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [newRoomName]);\n  const onClickSubmit = useCallback(() => {\n    if (messageText.replace(/\\s/g, '').length) {\n      console.log(messageText);\n      socket.emit('message', messageText, roomID);\n    }\n    setMessageText('');\n  }, [messageText]);\n  socket.on('update', chatLog => {\n    setCurrentChatLog(chatLog);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roomCreationSection\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"newRoomName\",\n        type: \"text\",\n        value: newRoomName,\n        onChange: event => {\n          setNewRoomName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"newRoom\",\n        onClick: onClickCreateRoom,\n        type: \"submit\",\n        value: \"Create Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sendMessageSection\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: event => {\n          setRoomID(event.target.value);\n          socket.emit('joinRoom', event.target.value);\n        },\n        value: roomID,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"---\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), rooms.map((name, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: index,\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"inputText\",\n        type: \"text\",\n        value: messageText,\n        onChange: event => {\n          setMessageText(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"sendButton\",\n        onClick: onClickSubmit,\n        type: \"submit\",\n        value: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roomBoards\",\n      children: rooms.map((roomName, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roomBoard\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Channell: \", roomName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), currentChatLog.map((name, index))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"3GxkX5u0GWlk5Ah1ElRhT7RN0dE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","App","_s","rooms","setRooms","currentChatLog","setCurrentChatLog","newRoomName","setNewRoomName","roomID","setRoomID","messageText","setMessageText","on","console","log","id","onClickCreateRoom","indexOf","replace","length","emit","onClickSubmit","chatLog","children","className","type","value","onChange","event","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","name","index","roomName","_c","$RefreshReg$"],"sources":["/home/antonio/Desktop/Ft_Transcendence/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\n\nconst socket = io('http://localhost:3000');\n\nfunction App() {\n  const [rooms, setRooms] = useState<string[]>([]);\n  const [currentChatLog, setCurrentChatLog] = useState([]);\n  const [newRoomName, setNewRoomName] = useState('');\n  const [roomID, setRoomID] = useState('');\n  const [messageText, setMessageText] = useState('');\n\n  useEffect(() => {\n    socket.on('connect', () => {\n      console.log('connection ID : ', socket.id);\n    });\n  }, []);\n\n  const onClickCreateRoom = useCallback(() => {\n    if (\n      rooms.indexOf(newRoomName) < 0 &&\n      newRoomName.replace(/\\s/g, '').length\n    ) {\n      console.log('createRoom', newRoomName);\n      socket.emit('createRoom', newRoomName);\n      setRooms([...rooms, newRoomName]);\n    }\n    setNewRoomName('');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [newRoomName]);\n\n  const onClickSubmit = useCallback(() => {\n    if (messageText.replace(/\\s/g, '').length) {\n      console.log(messageText);\n      socket.emit('message', messageText, roomID);\n    }\n    setMessageText('');\n  }, [messageText]);\n\n  socket.on('update', (chatLog: []) => {\n    setCurrentChatLog(chatLog);\n  });\n\n  return (\n    <>\n      <div className=\"roomCreationSection\">\n        <input\n          id=\"newRoomName\"\n          type=\"text\"\n          value={newRoomName}\n          onChange={(event) => {\n            setNewRoomName(event.target.value);\n          }}\n        />\n        <input\n          id=\"newRoom\"\n          onClick={onClickCreateRoom}\n          type=\"submit\"\n          value=\"Create Room\"\n        />\n      </div>\n\n      <div className=\"sendMessageSection\">\n        <select\n          onChange={(event) => {\n            setRoomID(event.target.value);\n            socket.emit('joinRoom', event.target.value);\n          }}\n          value={roomID}\n        >\n          <option value=\"\">---</option>\n          {rooms.map((name, index) => (\n            <option value={index}>{name}</option>\n          ))}\n        </select>\n        <input\n          id=\"inputText\"\n          type=\"text\"\n          value={messageText}\n          onChange={(event) => {\n            setMessageText(event.target.value);\n          }}\n        />\n        <input\n          id=\"sendButton\"\n          onClick={onClickSubmit}\n          type=\"submit\"\n          value=\"Send\"\n        />\n      </div>\n      <div className=\"roomBoards\">\n        {rooms.map((roomName, index) => (\n          <div className=\"roomBoard\" key={index}>\n            <h3>Channell: {roomName}</h3>\n\t\t\t{currentChatLog.map((name, index))}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnB,MAAMC,MAAM,GAAGL,EAAE,CAAC,uBAAuB,CAAC;AAE1C,SAASM,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAW,EAAE,CAAC;EAChD,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACdO,MAAM,CAACa,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEf,MAAM,CAACgB,EAAE,CAAC;IAC5C,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,iBAAiB,GAAGvB,WAAW,CAAC,MAAM;IAC1C,IACES,KAAK,CAACe,OAAO,CAACX,WAAW,CAAC,GAAG,CAAC,IAC9BA,WAAW,CAACY,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAACC,MAAM,EACrC;MACAN,OAAO,CAACC,GAAG,CAAC,YAAY,EAAER,WAAW,CAAC;MACtCP,MAAM,CAACqB,IAAI,CAAC,YAAY,EAAEd,WAAW,CAAC;MACtCH,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEI,WAAW,CAAC,CAAC;IACnC;IACAC,cAAc,CAAC,EAAE,CAAC;IAClB;EACF,CAAC,EAAE,CAACD,WAAW,CAAC,CAAC;EAEjB,MAAMe,aAAa,GAAG5B,WAAW,CAAC,MAAM;IACtC,IAAIiB,WAAW,CAACQ,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAACC,MAAM,EAAE;MACzCN,OAAO,CAACC,GAAG,CAACJ,WAAW,CAAC;MACxBX,MAAM,CAACqB,IAAI,CAAC,SAAS,EAAEV,WAAW,EAAEF,MAAM,CAAC;IAC7C;IACAG,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC,EAAE,CAACD,WAAW,CAAC,CAAC;EAEjBX,MAAM,CAACa,EAAE,CAAC,QAAQ,EAAGU,OAAW,IAAK;IACnCjB,iBAAiB,CAACiB,OAAO,CAAC;EAC5B,CAAC,CAAC;EAEF,oBACE1B,OAAA,CAAAE,SAAA;IAAAyB,QAAA,gBACE3B,OAAA;MAAK4B,SAAS,EAAC,qBAAqB;MAAAD,QAAA,gBAClC3B,OAAA;QACEmB,EAAE,EAAC,aAAa;QAChBU,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEpB,WAAY;QACnBqB,QAAQ,EAAGC,KAAK,IAAK;UACnBrB,cAAc,CAACqB,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC;QACpC;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFrC,OAAA;QACEmB,EAAE,EAAC,SAAS;QACZmB,OAAO,EAAElB,iBAAkB;QAC3BS,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAC;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENrC,OAAA;MAAK4B,SAAS,EAAC,oBAAoB;MAAAD,QAAA,gBACjC3B,OAAA;QACE+B,QAAQ,EAAGC,KAAK,IAAK;UACnBnB,SAAS,CAACmB,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC;UAC7B3B,MAAM,CAACqB,IAAI,CAAC,UAAU,EAAEQ,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC;QAC7C,CAAE;QACFA,KAAK,EAAElB,MAAO;QAAAe,QAAA,gBAEd3B,OAAA;UAAQ8B,KAAK,EAAC,EAAE;UAAAH,QAAA,EAAC;QAAG;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC5B/B,KAAK,CAACiC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBzC,OAAA;UAAQ8B,KAAK,EAAEW,KAAM;UAAAd,QAAA,EAAEa;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CACrC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACTrC,OAAA;QACEmB,EAAE,EAAC,WAAW;QACdU,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEhB,WAAY;QACnBiB,QAAQ,EAAGC,KAAK,IAAK;UACnBjB,cAAc,CAACiB,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC;QACpC;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFrC,OAAA;QACEmB,EAAE,EAAC,YAAY;QACfmB,OAAO,EAAEb,aAAc;QACvBI,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNrC,OAAA;MAAK4B,SAAS,EAAC,YAAY;MAAAD,QAAA,EACxBrB,KAAK,CAACiC,GAAG,CAAC,CAACG,QAAQ,EAAED,KAAK,kBACzBzC,OAAA;QAAK4B,SAAS,EAAC,WAAW;QAAAD,QAAA,gBACxB3B,OAAA;UAAA2B,QAAA,GAAI,YAAU,EAACe,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACrC7B,cAAc,CAAC+B,GAAG,EAAEC,IAAI,EAAEC,KAAK,CAAC,CAAC;MAAA,GAFKA,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGhC,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACN,CAAC;AAEP;AAAChC,EAAA,CA/FQD,GAAG;AAAAuC,EAAA,GAAHvC,GAAG;AAiGZ,eAAeA,GAAG;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}